- dif_type had better be a string

- implementare l'event kernel --> user RINA_KERN_CONFIG_CHANGED, per avvisare
  le applicazioni che è necessario rifare un ipcps_fetch()

- migliorare il sistema di build

- limitare la lunghezza delle code nel kernel

- vmpi_provider_find_instance non dovrebbe essere bloccante

- flow entry in stato ALLOCATED ma mai associate ad un file descriptor con
  bind() dovrebbero sparire dopo un po', altrimenti c'è leakage

- quando un ipcp normale viene distrutto, fare il cleanup completo delle
  strutture dati

- rimuovere usleep() hack in uipcp_server

- rina-utils: routine di deserializzazione devono gestire errori di lunghezza

- shim-link --> ha il vantaggio di non necessitare di sistemi di directory, e
  permette di costruire topologie di DIF arbitrarie su un singolo host

- vedere come inserire il campo lunghezza nell PCI header

- aggiustare il locking:
    a) flow_lookup() dovrebbe sparire
    b) il global lock deve sparire, almeno nel datapath.
    c) il punto b) non è solo una questione di performance. È anzi prima di tutto
       un modo di poter invocare lock diversi a diversy layer lungo il datapath
       di ricezione e trasmissione
    d) attualmente il locking non è safe nel datapath (per esempio vedi
       rina_normal_sdu_write() o rina_normal_sdu_rx()

- lo schema di locking non è consistente con i tipi di contesto: un mutex non
  può essere chiamato nel ramo di ricezione (rina_tx_restart() inclusa) nè nel
  tasklet di completamento trasmissione;
